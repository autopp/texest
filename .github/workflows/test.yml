name: test

on:
  workflow_call:
    inputs:
      e2e_tester:
        type: string
        required: true
    secrets:
      SLACK_WEBHOOK_URL:
        required: true
      CODECOV_TOKEN:
        required: true
    outputs:
      version:
        value: ${{ jobs.test-and-build.outputs.version }}
      tag:
        value: ${{ jobs.test-and-build.outputs.tag }}

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
      tag: ${{ steps.extract-version.outputs.tag }}
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools,rustfmt,clippy
      - uses: taiki-e/install-action@cargo-llvm-cov
      - uses: Swatinem/rust-cache@v2
      - id: extract-version
        run: './.github/scripts/extract-version'
      - run: echo VERSION=${{ steps.extract-version.outputs.version }} TAG=${{ steps.extract-version.outputs.tag }}
      - run: |
          cargo fmt --check
          cargo clippy -- -D warnings
      - run: cargo llvm-cov --all-features --lcov --output-path lcov.info
        id: unittest
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ steps.unittest.conclusion == 'success' || steps.unittest.conclusion == 'failure' }}
      - run: cargo build --release
      - run: |
          gh release download --repo autopp/texest --pattern texest-x86_64-unknown-linux-musl -D /tmp
          chmod a+x /tmp/texest-x86_64-unknown-linux-musl
          gh release download --repo autopp/serverify --pattern serverify-x86_64-unknown-linux-musl -D /tmp
          chmod a+x /tmp/serverify-x86_64-unknown-linux-musl
          E2E_TARGET=$(pwd)/target/release/texest E2E_TESTER=${{ inputs.e2e_tester }} SERVERIFY=/tmp/serverify-x86_64-unknown-linux-musl e2e/run.sh
      - name: Notify to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,took,workflow,job,ref,message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure() || cancelled()
